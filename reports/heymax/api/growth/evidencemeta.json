{"queries":[{"id":"countries","compiledQueryString":"select distinct country\nfrom pgsql.growth_metrics_month","inputQueryString":"select distinct country\nfrom pgsql.growth_metrics_month","compiled":false,"inline":true},{"id":"user_cat","compiledQueryString":"select distinct user_category\nfrom pgsql.growth_metrics_month","inputQueryString":"select distinct user_category\nfrom pgsql.growth_metrics_month","compiled":false,"inline":true},{"id":"user_metrics_by_country_month","compiledQueryString":"select period::date as period,\ncountry,\n    user_category,\n    user_count,\n    active_users\nfrom pgsql.growth_metrics_month\nwhere country like '${inputs.country.value}'\nand user_category!='churned_users'","inputQueryString":"select period::date as period,\ncountry,\n    user_category,\n    user_count,\n    active_users\nfrom pgsql.growth_metrics_month\nwhere country like '${inputs.country.value}'\nand user_category!='churned_users'","compiled":false,"inline":true},{"id":"growth_by_month","compiledQueryString":"select period, country, n, -c as churn, r, n+r-c as growth\n            from(\nselect period::date as period,\ncountry,\nsum(case when user_category = 'new_users' then user_count end) as n,\nsum(case when user_category = 'resurrected_users' then user_count end) as r,\nsum(case when user_category = 'churned_users' then user_count end) as c\nfrom pgsql.growth_metrics_month\ngroup by 1,2\n)t1\nwhere country like '${inputs.country.value}'","inputQueryString":"select period, country, n, -c as churn, r, n+r-c as growth\n            from(\nselect period::date as period,\ncountry,\nsum(case when user_category = 'new_users' then user_count end) as n,\nsum(case when user_category = 'resurrected_users' then user_count end) as r,\nsum(case when user_category = 'churned_users' then user_count end) as c\nfrom pgsql.growth_metrics_month\ngroup by 1,2\n)t1\nwhere country like '${inputs.country.value}'","compiled":false,"inline":true},{"id":"user_metrics_by_country_week","compiledQueryString":"select period::date as period,\ncountry,\n    user_category,\n    user_count,\n    active_users\nfrom pgsql.growth_metrics_week\nwhere country like '${inputs.country.value}'\nand user_category!='churned_users'","inputQueryString":"select period::date as period,\ncountry,\n    user_category,\n    user_count,\n    active_users\nfrom pgsql.growth_metrics_week\nwhere country like '${inputs.country.value}'\nand user_category!='churned_users'","compiled":false,"inline":true},{"id":"growth_by_week","compiledQueryString":"select period, country, n, -c as churn, r, n+r-c as growth\n            from(\nselect period::date as period,\ncountry,\nsum(case when user_category = 'new_users' then user_count end) as n,\nsum(case when user_category = 'resurrected_users' then user_count end) as r,\nsum(case when user_category = 'churned_users' then user_count end) as c\nfrom pgsql.growth_metrics_week\ngroup by 1,2\n)t1\nwhere country like '${inputs.country.value}'","inputQueryString":"select period, country, n, -c as churn, r, n+r-c as growth\n            from(\nselect period::date as period,\ncountry,\nsum(case when user_category = 'new_users' then user_count end) as n,\nsum(case when user_category = 'resurrected_users' then user_count end) as r,\nsum(case when user_category = 'churned_users' then user_count end) as c\nfrom pgsql.growth_metrics_week\ngroup by 1,2\n)t1\nwhere country like '${inputs.country.value}'","compiled":false,"inline":true},{"id":"user_metrics_by_country_day","compiledQueryString":"select period::date as period,\ncountry,\n    user_category,\n    user_count,\n    active_users\nfrom pgsql.growth_metrics_day\nwhere country like '${inputs.country.value}'\nand user_category!='churned_users'","inputQueryString":"select period::date as period,\ncountry,\n    user_category,\n    user_count,\n    active_users\nfrom pgsql.growth_metrics_day\nwhere country like '${inputs.country.value}'\nand user_category!='churned_users'","compiled":false,"inline":true},{"id":"growth_by_day","compiledQueryString":"select distinct period, country, n+r-c as growth, unnest(\n                ARRAY['New', 'Retained', 'Churned']\n            ) AS user_category,\n            unnest(ARRAY[n, r, -c]) AS user_count,\n            from(\nselect period::date as period,\ncountry,\nsum(case when user_category = 'new_users' then user_count end) as n,\nsum(case when user_category = 'resurrected_users' then user_count end) as r,\nsum(case when user_category = 'churned_users' then user_count end) as c\nfrom pgsql.growth_metrics_day\ngroup by 1,2\n)t1\nwhere country like '${inputs.country.value}'","inputQueryString":"select distinct period, country, n+r-c as growth, unnest(\n                ARRAY['New', 'Retained', 'Churned']\n            ) AS user_category,\n            unnest(ARRAY[n, r, -c]) AS user_count,\n            from(\nselect period::date as period,\ncountry,\nsum(case when user_category = 'new_users' then user_count end) as n,\nsum(case when user_category = 'resurrected_users' then user_count end) as r,\nsum(case when user_category = 'churned_users' then user_count end) as c\nfrom pgsql.growth_metrics_day\ngroup by 1,2\n)t1\nwhere country like '${inputs.country.value}'","compiled":false,"inline":true},{"id":"active_users_month","compiledQueryString":"select distinct period::date as period,\ncountry,\n    active_users\nfrom pgsql.growth_metrics_month","inputQueryString":"select distinct period::date as period,\ncountry,\n    active_users\nfrom pgsql.growth_metrics_month","compiled":false,"inline":true},{"id":"active_users_week","compiledQueryString":"select distinct period::date as period,\ncountry,\n    active_users\nfrom pgsql.growth_metrics_week","inputQueryString":"select distinct period::date as period,\ncountry,\n    active_users\nfrom pgsql.growth_metrics_week","compiled":false,"inline":true},{"id":"active_users_day","compiledQueryString":"select distinct period::date as period,\ncountry,\n    active_users\nfrom pgsql.growth_metrics_day","inputQueryString":"select distinct period::date as period,\ncountry,\n    active_users\nfrom pgsql.growth_metrics_day","compiled":false,"inline":true}]}